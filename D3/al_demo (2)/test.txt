外循环第1次开始

比较50和10
50>10
进入交换环节
开始交换50和10
50和10交换完毕
比较50和40
50>40
进入交换环节
开始交换50和40
50和40交换完毕
比较50和20
50>20
进入交换环节
开始交换50和20
50和20交换完毕
比较50和80

外循环第1次结束
外循环第2次开始

比较10和40
比较40和20
40>20
进入交换环节
开始交换40和20
40和20交换完毕
比较40和50

外循环第2次结束
外循环第3次开始

比较10和20
比较20和40

外循环第3次结束
外循环第4次开始

比较10和20

外循环第4次结束


<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<title>sort-demo</title>
	<!-- D3 -->
	<script type="text/javascript" src="../d3.min.js"></script>
	<!-- hightlight code -->
	<script type="text/javascript" src="../highlight/prism.js"></script>
	<link rel="stylesheet" type="text/css" href="../highlight/prism.css" />
	<style type="text/css">
		.message{
			width: 300px;
			height: 1000px;
			background-color: #f5f2f0;
			border-radius: 3px;
			padding: 10px;
			font-family: "Meiryo UI";
			font-weight: 18px;
			float: left;
		}
		.message text{
			display: block;
			margin: 0 auto;
			font-family: "Meiryo UI";
			font-weight: 18px;
			color: #333;
		}
	</style>
</head>
<body>
	<script type="text/javascript">
		var numberset = [50, 10, 40, 20, 80];
	</script>
	<div id="test" style="float: left;">
		<script type="text/javascript">
			window.onload = function(){
				var svg = d3.select('#test')
							.append('svg')
							.attr({
								'width':'700px',
								'height':'400px',
								'float': 'left'
							});
				var group = svg.append('g');
				var bubble = group.selectAll('circle').data(numberset).enter()				.append('circle')
									.attr('class', function(d, i){return 'bubble'+i;})
									.attr({
										'cx':function(d, i){return 100+100*i+'px';},
										'cy':'200px',
										'r':function(d, i){return 20+d/5+'px';},
										'fill':'skyblue'
									});
				var number = group.selectAll('text').data(numberset).enter().append('text')
								.text(function(d){return d;})
								.attr('class', function(d, i){return 'number'+i;})
								.attr({
									'x':function(d, i){return 100+100*i+'px';},
									'y':'210px'
								})
								.style({
									'text-anchor':'middle',
									'font-size':'28px',
									'font-weight':'bold',
									'fill':'#fff'
								});
			}
		</script>
	</div>
	<div class="message">
		<text>
			<pre style="background-color: skyblue;display: inline-block;width: 40px;height: 40px;border-radius: 50%;margin:0px;"></pre>
			数据没有排序之前的颜色
		</text>
		<text>
			<pre style="background-color: tomato; display: inline-block; width: 40px; height: 40px; border-radius: 50%; margin: 0px;"></pre>
			数据进行比较时的颜色
		</text>
	</div>
	<button onclick="bubbleSort(numberset)">冒泡排序</button>
	<script type="text/javascript">
		function messageNotice(string){
			d3.select('.message')
				.append('text')
				.text(string);
		}

		function messageBigNotice(string){
			d3.select('.message')
				.append('text')
				.text(string)
				.style({
					'color': 'tomato',
					'font-weight': 'bold'
				});
		}

		function bubbleSort(array){
			var length = array.length,
				i, //外循环次数计数器
				j; //内循环次数计数器

			for(i = length-1; 0<i; i--){
				messageBigNotice('外循环第'+(length-i)+'次开始');
				for(j = 0; j<i; j++){
					setTimeout(function(){
						//把进行比较和交换视为一步，每一次进行到这里都必须要么被通知下一步要么被通知直接进行
						var flag = compare(j, j+1);

						if(flag == true){ //比较array[j]和array[j+1]
							messageNotice('进入交换环节');
							swap(j, j+1);  //若array[j] > array[j+1]，则交换两者位置
						}
						d3.select('.bubble'+j)
							.attr('fill','green');
						d3.select('.bubble'+j+1)
							.attr('fill','green');

					}, 2500*i);
					/*
					//把进行比较和交换视为一步，每一次进行到这里都必须要么被通知下一步要么被通知直接进行
					var flag = compare(j, j+1);

					if(flag == true){ //比较array[j]和array[j+1]
						messageNotice('进入交换环节');
						swap(j, j+1);  //若array[j] > array[j+1]，则交换两者位置
					}
					d3.select('.bubble'+j)
						.attr('fill','green');
					d3.select('.bubble'+j+1)
						.attr('fill','green');
					*/
				}
				//每次外循环结束最后一个元素都应该变为黑色
				console.log('i='+i);
				d3.select('.bubble'+i)
					.attr('fill', 'black');
				messageNotice('外循环第'+(length-i)+'次结束');
			}
				
				
			return array;
		}

		function compare(a, b){
			messageNotice('比较'+d3.select('.number'+a).text()+'和'+d3.select('.number'+b).text());
			//先把比较的这两个数字的圆圈置为tomato颜色
			d3.select('.bubble'+a)
				.attr('fill', 'tomato');
			d3.select('.bubble'+b)
				.attr('fill', 'tomato');
			//先初始化flag为0，若a>b则返回1（true）
			var flag = false;
			if(d3.select('.number'+a).text() > d3.select('.number'+b).text()){
				messageNotice(d3.select('.number'+a).text()+'>'+d3.select('.number'+b).text());
				flag = true;
			}
			return flag;
		}

		function swap(a, b){
			//先将交换的数字存起来
			var aNumber = d3.select('.number'+a).text();
			var bNumber = d3.select('.number'+b).text();
			//打印交换消息
			messageNotice('开始交换'+aNumber+'和'+bNumber);
			//a的数字变为b的数字
			d3.select('.number'+a).text(bNumber);
			//a的圆圈变为b的圆圈，且交换完毕的圆圈颜色变为#0099cc(深蓝)
			d3.select('.bubble'+a)
				.transition()
				.duration(500)
				.delay(500)
				.ease('linear')
				.attr({
					'r': 20+bNumber/5+'px',
					'fill': '#0099cc'
				});
			//b的数字变为a的数字
			d3.select('.number'+b).text(aNumber);
			//b的圆圈变为a的圆圈，且交换完毕的圆圈颜色变为#0099cc
			d3.select('.bubble'+b)
				.transition()
				.duration(500)
				.delay(500)
				.ease('linear')
				.attr({
					'r': 20+aNumber/5+'px',
					'fill': '#0099cc'
				});
			messageNotice(aNumber+'和'+bNumber+'交换完毕');
		}

		
	</script>
</body>
</html>
